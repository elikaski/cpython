// Auto-generated by Tools/build/generate_token.py

/* Token types */
#ifndef Py_INTERNAL_TOKEN_H
#define Py_INTERNAL_TOKEN_H
#ifdef __cplusplus
extern "C" {
#endif

#ifndef Py_BUILD_CORE
#  error "this header requires Py_BUILD_CORE define"
#endif

#undef TILDE   /* Prevent clash of our definition with system macro. Ex AIX, ioctl.h */

#define ENDMARKER       0
#define NAME            1
#define NUMBER          2
#define STRING          3
#define NEWLINE         4
#define INDENT          5
#define DEDENT          6
#define LPAR            7
#define RPAR            8
#define LSQB            9
#define RSQB            10
#define COLON           11
#define COMMA           12
#define SEMI            13
#define PLUS            14
#define PLUSPLUS        15
#define MINUSMINUS      16
#define SHLSHL          17
#define SHRSHR          18
#define XORXOR          19
#define ANDAND          20
#define OROR            21
#define MULMUL          22
#define DIVDIV          23
#define MODMOD          24
#define MINUS           25
#define STAR            26
#define SLASH           27
#define VBAR            28
#define AMPER           29
#define LESS            30
#define GREATER         31
#define EQUAL           32
#define DOT             33
#define PERCENT         34
#define LBRACE          35
#define RBRACE          36
#define EQEQUAL         37
#define NOTEQUAL        38
#define LESSEQUAL       39
#define GREATEREQUAL    40
#define TILDE           41
#define CIRCUMFLEX      42
#define LEFTSHIFT       43
#define RIGHTSHIFT      44
#define DOUBLESTAR      45
#define PLUSEQUAL       46
#define MINEQUAL        47
#define STAREQUAL       48
#define SLASHEQUAL      49
#define PERCENTEQUAL    50
#define AMPEREQUAL      51
#define VBAREQUAL       52
#define CIRCUMFLEXEQUAL 53
#define LEFTSHIFTEQUAL  54
#define RIGHTSHIFTEQUAL 55
#define DOUBLESTAREQUAL 56
#define DOUBLESLASH     57
#define DOUBLESLASHEQUAL 58
#define AT              59
#define ATEQUAL         60
#define RARROW          61
#define ELLIPSIS        62
#define COLONEQUAL      63
#define EXCLAMATION     64
#define OP              65
#define TYPE_IGNORE     66
#define TYPE_COMMENT    67
#define SOFT_KEYWORD    68
#define FSTRING_START   69
#define FSTRING_MIDDLE  70
#define FSTRING_END     71
#define COMMENT         72
#define NL              73
#define ERRORTOKEN      74
#define N_TOKENS        76
#define NT_OFFSET       256

/* Special definitions for cooperation with parser */

#define ISTERMINAL(x)           ((x) < NT_OFFSET)
#define ISNONTERMINAL(x)        ((x) >= NT_OFFSET)
#define ISEOF(x)                ((x) == ENDMARKER)
#define ISWHITESPACE(x)         ((x) == ENDMARKER || \
                                 (x) == NEWLINE   || \
                                 (x) == INDENT    || \
                                 (x) == DEDENT)
#define ISSTRINGLIT(x)          ((x) == STRING           || \
                                 (x) == FSTRING_MIDDLE)


// Export these 4 symbols for 'test_peg_generator'
PyAPI_DATA(const char * const) _PyParser_TokenNames[]; /* Token names */
PyAPI_FUNC(int) _PyToken_OneChar(int);
PyAPI_FUNC(int) _PyToken_TwoChars(int, int);
PyAPI_FUNC(int) _PyToken_ThreeChars(int, int, int);

#ifdef __cplusplus
}
#endif
#endif  // !Py_INTERNAL_TOKEN_H
